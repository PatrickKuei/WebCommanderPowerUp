{"version":3,"sources":["components/loadingPage/LoadingFolderList.js","contexts/filesInfoContext/FilesInfoContext.js","contexts/filesInfoContext/actionTypes.js","contexts/filesInfoContext/reducer.js","contexts/filesInfoContext/index.js","contexts/pathArrayContext/PathArrayContext.js","contexts/pathArrayContext/actionTypes.js","contexts/pathArrayContext/reducer.js","contexts/pathArrayContext/index.js","contexts/selectedFilesContext/SelectedFilesContext.js","contexts/selectedFilesContext/actionTypes.js","contexts/selectedFilesContext/reducer.js","contexts/selectedFilesContext/index.js","constants/icons.js","contexts/pathArrayContext/actions.js","contexts/selectedFilesContext/actions.js","constants/index.js","api/filesAPI.js","contexts/filesInfoContext/actions.js","utilities.js","components/File.js","constants/typeName.js","components/FileList.js","components/loadingPage/LoadingLeftBar.js","components/LeftNavbar.js","components/CreateFileDialogBody.js","components/CreateFileDialogFooter.js","components/CreateFileDialogTabs.js","components/CreateFileDialog.js","components/CreateButton.js","components/CopyButton.js","components/PasteButton.js","components/DeleteButton.js","components/ResetSelectButton.js","components/Toolbar.js","components/FolderView.js","components/BreadCrumb.js","components/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["LoadingFolderList","cardList","i","push","className","xmlns","width","height","fill","viewBox","d","speed","backgroundColor","foregroundColor","x","y","rx","ry","FilesInfoContext","React","createContext","FilesInfoDispatchContext","actionTypes","DATA_LOADING","UPDATE_CURRENT_FOLDER","DELETE_FILE","CurrentFileReducer","prevState","action","type","isLoading","folderData","id","children","filter","file","Error","useFilesContext","useContext","useFilesDispatch","FilesProvider","props","useReducer","currentFolder","currentFolderDispatch","Provider","value","PathArrayContext","PathArrayDispatchContext","SLICE_PATH","APPEND_FOLDER","GET_NEW_PATH","PathArrayReducer","index","slice","name","dataset","newPath","idArray","idpath","split","nameArray","namepath","length","usePathArrayDispatch","PathArrayProvider","pathArray","pathArrayDispatch","SelectedFilesContext","SelectedFilesDispatchContext","APPEND_SELECTED_FILE","DESELECT_FILE","RESET","SelectedFilesReducer","fileType","selectedFile","console","log","useSelectedFilesContext","useSelectedFilesDispatch","SelectedFileProvider","selectedFiles","selectedFilesDispatch","pathActions","slicePath","appendFolder","getNewPathArray","selectedFilesActions","appendSelectedFile","deselectFile","reset","BASE_URL","api","getFolderHierarchy","axios","get","getFilesById","folderId","createFileByData","parentItemId","items","folders","post","payload","pasteFilesById","folder","files","deleteFileById","fileId","delete","params","fileActions","dataLoaing","updateCurrentFolder","deleteFile","resetSelecetedFiles","dispatch","fetchFolderFiles","a","filesAPI","data","File","isDetail","isChecked","typeName","typeNum","useTypeName","icon","useIcon","handleFolderCardDbClick","folderName","handleCheckBoxClick","e","fileName","target","checked","onDoubleClick","onChange","scope","toUpperCase","size","toLocaleString","stopPropagation","FileList","getInputChecked","useEffect","map","LoadingLeftBar","LeftNavbar","useState","root","folderHierarchy","setFolderHierarchy","fetchFolderHierarchy","renderFolders","resultIdArr","resultNameArr","data-idpath","join","data-namepath","onClick","clickedFolderId","handleFolderClick","disabled","child","CreateFileDialogBody","isFolder","newFolderState","updateNewFolderState","newFiles","updateNewFiles","newFilesRef","checkFolderNameValidation","text","test","htmlFor","isFolderNameValid","isValid","handleFolderNameInput","multiple","uuidv4","ref","CreateFileDialogFooter","toggleIsFolder","toggleShowDialog","resetNewFolderState","resetFile","createFile","destFolderId","current","newFilesLength","CreateFileDialogTabs","aria-current","CreateFileDialog","setIsFolder","setNewFolderState","setNewFiles","useRef","prev","tabIndex","newState","CreateButton","btnDisabled","isShowed","setIsShowed","DialogPortal","ReactDOM","createPortal","document","body","CopyButton","updateCopiedFiles","isCopied","selectedFileIds","PasteButton","copiedFiles","resetCopiedFiles","pasteFiles","DeleteButton","ResetSelectButton","Toolbar","toggleDetailView","setBtnDisabled","setCopiedFiles","setIsCopied","FolderView","setIsDetail","BreadCrumb","renderedPath","pathPart","handlePathLinkClick","aria-label","HomePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e6f4795.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nexport default function LoadingFolderList() {\r\n  const cardList = [];\r\n\r\n  for (let i = 0; i < 8; i++) {\r\n    cardList.push(\r\n      <div key={i} className=\"col-3 card\">\r\n        <div className=\"folder__content\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"100px\"\r\n            height=\"100px\"\r\n            fill=\"currentColor\"\r\n            className=\"folder__content__picture bi bi-folder\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M.54 3.87L.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3h3.982a2 2 0 0 1 1.992 2.181l-.637 7A2 2 0 0 1 13.174 14H2.826a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31zM2.19 4a1 1 0 0 0-.996 1.09l.637 7a1 1 0 0 0 .995.91h10.348a1 1 0 0 0 .995-.91l.637-7A1 1 0 0 0 13.81 4H2.19zm4.69-1.707A1 1 0 0 0 6.172 2H2.5a1 1 0 0 0-1 .981l.006.139C1.72 3.042 1.95 3 2.19 3h5.396l-.707-.707z\" />\r\n          </svg>\r\n          <div className=\"folder__content__picture-name card-body text-center\">\r\n            <h5 className=\"card-title\">\r\n              <ContentLoader\r\n                speed={3}\r\n                width={150}\r\n                height={26}\r\n                viewBox=\"0 0 150 26\"\r\n                backgroundColor=\"#dedede\"\r\n                foregroundColor=\"#7f7d9b\"\r\n              >\r\n                <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"150\" height=\"26\" />\r\n              </ContentLoader>\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"folder-list row border-bottom overflow-auto\">\r\n      {cardList}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const FilesInfoContext = React.createContext();\r\n\r\nexport const FilesInfoDispatchContext = React.createContext();\r\n","const actionTypes = {\r\n  DATA_LOADING: \"data_loading\",\r\n  UPDATE_CURRENT_FOLDER: \"update_current_folder\",\r\n  DELETE_FILE: \"delete_file\",\r\n};\r\n\r\nexport default actionTypes;\r\n","import actionTypes from \"./actionTypes\";\r\n\r\nexport const getCurrentFolderDefault = () => ({\r\n  isLoading: true,\r\n  id: \"\",\r\n  children: [],\r\n});\r\n\r\nexport function CurrentFileReducer(prevState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.DATA_LOADING: {\r\n      return { ...prevState, isLoading: true };\r\n    }\r\n\r\n    case actionTypes.UPDATE_CURRENT_FOLDER: {\r\n      const { folderData } = action;\r\n      return {\r\n        isLoading: false,\r\n        id: folderData.id,\r\n        children: folderData.children,\r\n      };\r\n    }\r\n    case actionTypes.DELETE_FILE: {\r\n      const { id } = action;\r\n      return {\r\n        ...prevState,\r\n        children: prevState.children.filter((file) => file.id !== id),\r\n      };\r\n    }\r\n    default:\r\n      throw new Error(\"action not defined\");\r\n  }\r\n}\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport { FilesInfoContext, FilesInfoDispatchContext } from \"./FilesInfoContext\";\r\n\r\nimport { CurrentFileReducer, getCurrentFolderDefault } from \"./reducer\";\r\n\r\nexport const useFilesContext = () => useContext(FilesInfoContext);\r\nexport const useFilesDispatch = () => useContext(FilesInfoDispatchContext);\r\n\r\nexport function FilesProvider(props) {\r\n  const [currentFolder, currentFolderDispatch] = useReducer(\r\n    CurrentFileReducer,\r\n    getCurrentFolderDefault()\r\n  );\r\n\r\n  return (\r\n    <FilesInfoContext.Provider\r\n      value={{\r\n        currentFolder,\r\n      }}\r\n    >\r\n      <FilesInfoDispatchContext.Provider\r\n        value={{\r\n          currentFolderDispatch,\r\n        }}\r\n      >\r\n        {props.children}\r\n      </FilesInfoDispatchContext.Provider>\r\n    </FilesInfoContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const PathArrayContext = React.createContext();\r\n\r\nexport const PathArrayDispatchContext = React.createContext();\r\n","const actionTypes = {\r\n  SLICE_PATH: \"slice_path\",\r\n  APPEND_FOLDER: \"append_folder\",\r\n  GET_NEW_PATH: \"get_new_path\",\r\n};\r\nexport default actionTypes;\r\n","import actionTypes from \"./actionTypes\";\r\n\r\nexport const getPathArrayDefault = () => [{ id: \"root\", name: \"root\" }];\r\nexport function PathArrayReducer(prevState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.SLICE_PATH: {\r\n      const { index } = action;\r\n      return prevState.slice(0, index + 1);\r\n    }\r\n\r\n    case actionTypes.APPEND_FOLDER: {\r\n      const { id, name } = action;\r\n      return [...prevState, { id, name }];\r\n    }\r\n    case actionTypes.GET_NEW_PATH: {\r\n      const { dataset } = action;\r\n      const newPath = [];\r\n      const idArray = dataset.idpath.split(\"/\");\r\n      const nameArray = dataset.namepath.split(\"/\");\r\n\r\n      for (let i = 0; i < idArray.length; i++) {\r\n        newPath.push({ id: idArray[i], name: nameArray[i] });\r\n      }\r\n      return newPath;\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n}\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport { PathArrayContext, PathArrayDispatchContext } from \"./PathArrayContext\";\r\n\r\nimport { PathArrayReducer, getPathArrayDefault } from \"./reducer\";\r\n\r\nexport const usePathArrayContext = () => useContext(PathArrayContext);\r\nexport const usePathArrayDispatch = () => useContext(PathArrayDispatchContext);\r\n\r\nexport function PathArrayProvider(props) {\r\n  const [pathArray, pathArrayDispatch] = useReducer(\r\n    PathArrayReducer,\r\n    getPathArrayDefault()\r\n  );\r\n  return (\r\n    <PathArrayContext.Provider\r\n      value={{\r\n        pathArray,\r\n      }}\r\n    >\r\n      <PathArrayDispatchContext.Provider\r\n        value={{\r\n          pathArrayDispatch,\r\n        }}\r\n      >\r\n        {props.children}\r\n      </PathArrayDispatchContext.Provider>\r\n    </PathArrayContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const SelectedFilesContext = React.createContext();\r\nexport const SelectedFilesDispatchContext = React.createContext();\r\n","const actionTypes = {\r\n  APPEND_SELECTED_FILE: \"append_selected_file\",\r\n  DESELECT_FILE: \"deselect_file\",\r\n  RESET: \"reset\",\r\n};\r\nexport default actionTypes;\r\n","import actionTypes from \"./actionTypes\";\r\n\r\nexport const getSelectedFilesDefault = () => [];\r\nexport function SelectedFilesReducer(prevState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.APPEND_SELECTED_FILE: {\r\n      const { id, name, fileType } = action;\r\n      return [...prevState, { id: id, name: name, type: fileType }];\r\n    }\r\n    case actionTypes.DESELECT_FILE: {\r\n      const { id } = action;\r\n      return prevState.filter((selectedFile) => selectedFile.id !== id);\r\n    }\r\n\r\n    case actionTypes.RESET: {\r\n      return getSelectedFilesDefault();\r\n    }\r\n    default:\r\n      console.log(\"default\");\r\n      break;\r\n  }\r\n}\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport {\r\n  SelectedFilesContext,\r\n  SelectedFilesDispatchContext,\r\n} from \"./SelectedFilesContext\";\r\n\r\nimport { SelectedFilesReducer, getSelectedFilesDefault } from \"./reducer\";\r\n\r\nexport const useSelectedFilesContext = () => useContext(SelectedFilesContext);\r\nexport const useSelectedFilesDispatch = () =>\r\n  useContext(SelectedFilesDispatchContext);\r\n\r\nexport function SelectedFileProvider(props) {\r\n  const [selectedFiles, selectedFilesDispatch] = useReducer(\r\n    SelectedFilesReducer,\r\n    getSelectedFilesDefault()\r\n  );\r\n\r\n  return (\r\n    <SelectedFilesContext.Provider\r\n      value={{\r\n        selectedFiles,\r\n      }}\r\n    >\r\n      <SelectedFilesDispatchContext.Provider value={{ selectedFilesDispatch }}>\r\n        {props.children}\r\n      </SelectedFilesDispatchContext.Provider>\r\n    </SelectedFilesContext.Provider>\r\n  );\r\n}\r\n","export const useIcon = (type) => {\r\n  switch (type) {\r\n    case \"folder\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100px\"\r\n          height=\"100px\"\r\n          fill=\"currentColor\"\r\n          className=\"folder__content__picture bi bi-folder\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M.54 3.87L.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3h3.982a2 2 0 0 1 1.992 2.181l-.637 7A2 2 0 0 1 13.174 14H2.826a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31zM2.19 4a1 1 0 0 0-.996 1.09l.637 7a1 1 0 0 0 .995.91h10.348a1 1 0 0 0 .995-.91l.637-7A1 1 0 0 0 13.81 4H2.19zm4.69-1.707A1 1 0 0 0 6.172 2H2.5a1 1 0 0 0-1 .981l.006.139C1.72 3.042 1.95 3 2.19 3h5.396l-.707-.707z\" />\r\n        </svg>\r\n      );\r\n    case \"doc\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100px\"\r\n          height=\"100px\"\r\n          fill=\"currentColor\"\r\n          className=\"folder__content__picture bi bi-file-text-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M12 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zM5 4h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1 0-1zm-.5 2.5A.5.5 0 0 1 5 6h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zM5 8h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 0 1 0 1H5a.5.5 0 0 1 0-1z\" />\r\n        </svg>\r\n      );\r\n    case \"media\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100px\"\r\n          height=\"100px\"\r\n          fill=\"currentColor\"\r\n          className=\"folder__content__picture bi bi-file-earmark-music-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M9.293 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.707A1 1 0 0 0 13.707 4L10 .293A1 1 0 0 0 9.293 0zM9.5 3.5v-2l3 3h-2a1 1 0 0 1-1-1zM11 6.64v1.75l-2 .5v3.61c0 .495-.301.883-.662 1.123C7.974 13.866 7.499 14 7 14c-.5 0-.974-.134-1.338-.377-.36-.24-.662-.628-.662-1.123s.301-.883.662-1.123C6.026 11.134 6.501 11 7 11c.356 0 .7.068 1 .196V6.89a1 1 0 0 1 .757-.97l1-.25A1 1 0 0 1 11 6.64z\" />\r\n        </svg>\r\n      );\r\n    case \"archive\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100px\"\r\n          height=\"100px\"\r\n          fill=\"currentColor\"\r\n          className=\"folder__content__picture bi bi-archive-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M12.643 15C13.979 15 15 13.845 15 12.5V5H1v7.5C1 13.845 2.021 15 3.357 15h9.286zM5.5 7h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1zM.8 1a.8.8 0 0 0-.8.8V3a.8.8 0 0 0 .8.8h14.4A.8.8 0 0 0 16 3V1.8a.8.8 0 0 0-.8-.8H.8z\" />\r\n        </svg>\r\n      );\r\n    case \"file\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"100px\"\r\n          height=\"100px\"\r\n          fill=\"currentColor\"\r\n          className=\"folder__content__picture bi bi-file-earmark-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M4 0h5.293A1 1 0 0 1 10 .293L13.707 4a1 1 0 0 1 .293.707V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm5.5 1.5v2a1 1 0 0 0 1 1h2l-3-3z\" />\r\n        </svg>\r\n      );\r\n  }\r\n};\r\n","import actionTypes from \"./actionTypes\";\r\n\r\nconst pathActions = {\r\n  slicePath: (index) => ({\r\n    type: actionTypes.SLICE_PATH,\r\n    index,\r\n  }),\r\n  appendFolder: (id, name) => ({\r\n    type: actionTypes.APPEND_FOLDER,\r\n    id,\r\n    name,\r\n  }),\r\n  getNewPathArray: (dataset) => ({\r\n    type: actionTypes.GET_NEW_PATH,\r\n    dataset,\r\n  }),\r\n};\r\n\r\nexport default pathActions;\r\n","import actionTypes from \"./actionTypes\";\r\n\r\nconst selectedFilesActions = {\r\n  appendSelectedFile: (file) => {\r\n    return {\r\n      type: actionTypes.APPEND_SELECTED_FILE,\r\n      id: file.id,\r\n      name: file.name,\r\n      fileType: file.fileType,\r\n    };\r\n  },\r\n  deselectFile: (id) => ({\r\n    type: actionTypes.DELETE_FILE,\r\n    id,\r\n  }),\r\n  reset: () => ({\r\n    type: actionTypes.RESET,\r\n  }),\r\n};\r\n\r\nexport default selectedFilesActions;\r\n","export const BASE_URL = \"http://172.16.240.53:45816/web-commander-pro/api/\";\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../constants\";\r\n\r\nconst api = {\r\n  getFolderHierarchy: () => axios.get(`${BASE_URL}/hierarchy`),\r\n  getFilesById: (folderId) => axios.get(`${BASE_URL}/items/${folderId}`),\r\n  createFileByData: (parentItemId, items, folders) =>\r\n    axios.post(`${BASE_URL}/items/`, {\r\n      payload: { parentItemId, items, folders },\r\n    }),\r\n  pasteFilesById: (folder, files) =>\r\n    axios.post(`${BASE_URL}/items/`, { payload: { folder, files } }),\r\n\r\n  deleteFileById: (fileId) =>\r\n    axios.delete(`${BASE_URL}/items/`, {\r\n      params: { fileId },\r\n    }),\r\n};\r\nexport default api;\r\n","import actionTypes from \"./actionTypes\";\r\n\r\nconst fileActions = {\r\n  dataLoaing: () => ({\r\n    type: actionTypes.DATA_LOADING,\r\n  }),\r\n  updateCurrentFolder: (folderData) => ({\r\n    type: actionTypes.UPDATE_CURRENT_FOLDER,\r\n    folderData,\r\n  }),\r\n  deleteFile: (id) => ({\r\n    type: actionTypes.DELETE_FILE,\r\n    id,\r\n  }),\r\n};\r\n\r\nexport default fileActions;\r\n","import filesAPI from \"./api/filesAPI\";\r\nimport fileActions from \"./contexts/filesInfoContext/actions\";\r\nimport selectedFilesActions from \"./contexts/selectedFilesContext/actions\";\r\n\r\nexport const resetSelecetedFiles = (dispatch) => {\r\n  dispatch(selectedFilesActions.reset());\r\n};\r\n\r\nexport const fetchFolderFiles = async (dispatch, id) => {\r\n  dispatch(fileActions.dataLoaing());\r\n  const { data } = await filesAPI.getFilesById(id);\r\n  dispatch(fileActions.updateCurrentFolder(data));\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useFilesDispatch } from \"../contexts/filesInfoContext/\";\r\n\r\nimport { usePathArrayDispatch } from \"../contexts/pathArrayContext\";\r\n\r\nimport { useSelectedFilesDispatch } from \"../contexts/selectedFilesContext\";\r\n\r\nimport { useIcon } from \"../constants/icons\";\r\nimport { useTypeName } from \"../constants/typeName\";\r\nimport pathActions from \"../contexts/pathArrayContext/actions\";\r\nimport selectedFilesActions from \"../contexts/selectedFilesContext/actions\";\r\n\r\nimport { fetchFolderFiles } from \"../utilities\";\r\n\r\nfunction File(props) {\r\n  const { file, isDetail, isChecked } = props;\r\n  const { currentFolderDispatch } = useFilesDispatch();\r\n  const { pathArrayDispatch } = usePathArrayDispatch();\r\n  const { selectedFilesDispatch } = useSelectedFilesDispatch();\r\n  const typeName = useTypeName(file.type);\r\n  const icon = useIcon(typeName);\r\n\r\n  const handleFolderCardDbClick = (folderId, folderName) => {\r\n    if (typeName === \"folder\") {\r\n      fetchFolderFiles(currentFolderDispatch, folderId);\r\n      pathArrayDispatch(pathActions.appendFolder(folderId, folderName));\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxClick = (e, fileId, fileName, fileType) => {\r\n    if (e.target.checked) {\r\n      selectedFilesDispatch(\r\n        selectedFilesActions.appendSelectedFile({\r\n          id: fileId,\r\n          name: fileName,\r\n          type: fileType,\r\n        })\r\n      );\r\n    } else {\r\n      selectedFilesDispatch(selectedFilesActions.deselectFile(fileId));\r\n    }\r\n  };\r\n\r\n  if (!isDetail) {\r\n    return (\r\n      <div\r\n        className=\"col-3 card\"\r\n        onDoubleClick={() => handleFolderCardDbClick(file.id, file.name)}\r\n      >\r\n        <input\r\n          className=\"folder__checkbox\"\r\n          type=\"checkbox\"\r\n          checked={isChecked}\r\n          onDoubleClick={(e) => e.stopPropagation()}\r\n          onChange={(e) =>\r\n            handleCheckBoxClick(e, file.id, file.name, file.type)\r\n          }\r\n        />\r\n        <div className=\"folder__content\">\r\n          {icon}\r\n          <div className=\"folder__content__picture-name card-body text-center\">\r\n            <h5 className=\"card-title\">{file.name}</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <tr onDoubleClick={() => handleFolderCardDbClick(file.id, file.name)}>\r\n        <td>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isChecked}\r\n            onChange={(e) => handleCheckBoxClick(e, file.id)}\r\n          />\r\n        </td>\r\n        <td scope=\"row\">{file.name}</td>\r\n        <td>{typeName.toUpperCase()}</td>\r\n        <td>{file.size.toLocaleString()} KB</td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default File;\r\nFile.propTypes = {\r\n  file: PropTypes.object,\r\n  isDetail: PropTypes.bool,\r\n  isChecked: PropTypes.bool,\r\n};\r\n","export const useTypeName = (typeNum) => {\r\n  switch (typeNum) {\r\n    case 1:\r\n      return \"folder\";\r\n    case 2:\r\n      return \"doc\";\r\n    case 3:\r\n      return \"media\";\r\n    case 4:\r\n      return \"archive\";\r\n    default:\r\n      return \"file\";\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport LoadingFolderList from \"./loadingPage/LoadingFolderList\";\r\nimport File from \"./File\";\r\n\r\nimport {\r\n  useFilesContext,\r\n  useFilesDispatch,\r\n} from \"../contexts/filesInfoContext/\";\r\nimport { useSelectedFilesContext } from \"../contexts/selectedFilesContext\";\r\n\r\nimport { fetchFolderFiles } from \"../utilities\";\r\n\r\nfunction FileList(props) {\r\n  const { isDetail } = props;\r\n  const { currentFolder } = useFilesContext();\r\n  const { currentFolderDispatch } = useFilesDispatch();\r\n  const { selectedFiles } = useSelectedFilesContext();\r\n\r\n  const { children } = currentFolder;\r\n\r\n  const getInputChecked = (fileId) => {\r\n    let checked = false;\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      if (fileId === selectedFiles[i].id) {\r\n        checked = true;\r\n        break;\r\n      }\r\n    }\r\n    return checked;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFolderFiles(currentFolderDispatch, \"root\");\r\n  }, []);\r\n\r\n  if (currentFolder.isLoading) {\r\n    return <LoadingFolderList />;\r\n  } else {\r\n    return (\r\n      <div className=\"folder-list row border overflow-auto\">\r\n        {!isDetail ? (\r\n          children.map((file) => {\r\n            const isChecked = getInputChecked(file.id);\r\n            return (\r\n              <File\r\n                key={file.id}\r\n                file={file}\r\n                isDetail={isDetail}\r\n                isChecked={isChecked}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <table className=\"table table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th scope=\"col\">name</th>\r\n                <th scope=\"col\">type</th>\r\n                <th scope=\"col\">size</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {children.map((file) => {\r\n                const isChecked = getInputChecked(file.id);\r\n                return (\r\n                  <File\r\n                    key={file.id}\r\n                    file={file}\r\n                    isDetail={isDetail}\r\n                    isChecked={isChecked}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileList;\r\nFileList.propTypes = {\r\n  isDetail: PropTypes.bool,\r\n};\r\n","import React from \"react\";\r\n\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nexport default function LoadingLeftBar() {\r\n  return (\r\n    <ContentLoader\r\n      className=\"bg-dark\"\r\n      speed={3}\r\n      width={255}\r\n      height={505}\r\n      viewBox=\"0 0 255 505\"\r\n      backgroundColor=\"#dedede\"\r\n      foregroundColor=\"#7f7d9b\"\r\n    >\r\n      <rect x=\"10\" y=\"10\" rx=\"3\" ry=\"3\" width=\"50\" height=\"15\" />\r\n      <rect x=\"20\" y=\"40\" rx=\"3\" ry=\"3\" width=\"50\" height=\"15\" />\r\n      <rect x=\"20\" y=\"70\" rx=\"3\" ry=\"3\" width=\"120\" height=\"15\" />\r\n      <rect x=\"20\" y=\"100\" rx=\"3\" ry=\"3\" width=\"50\" height=\"15\" />\r\n      <rect x=\"30\" y=\"130\" rx=\"3\" ry=\"3\" width=\"70\" height=\"15\" />\r\n      <rect x=\"30\" y=\"160\" rx=\"3\" ry=\"3\" width=\"70\" height=\"15\" />\r\n      <rect x=\"40\" y=\"190\" rx=\"3\" ry=\"3\" width=\"120\" height=\"15\" />\r\n      <rect x=\"40\" y=\"220\" rx=\"3\" ry=\"3\" width=\"120\" height=\"15\" />\r\n    </ContentLoader>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport LoadingLeftBar from \"./loadingPage/LoadingLeftBar\";\r\n\r\nimport {\r\n  useFilesContext,\r\n  useFilesDispatch,\r\n} from \"../contexts/filesInfoContext/\";\r\nimport { usePathArrayDispatch } from \"../contexts/pathArrayContext\";\r\nimport { useSelectedFilesDispatch } from \"../contexts/selectedFilesContext\";\r\nimport pathActions from \"../contexts/pathArrayContext/actions\";\r\n\r\nimport filesAPI from \"../api/filesAPI\";\r\nimport { fetchFolderFiles, resetSelecetedFiles } from \"../utilities\";\r\n\r\nfunction LeftNavbar() {\r\n  const { currentFolder } = useFilesContext();\r\n  const { currentFolderDispatch } = useFilesDispatch();\r\n  const { selectedFilesDispatch } = useSelectedFilesDispatch();\r\n  const { pathArrayDispatch } = usePathArrayDispatch();\r\n\r\n  const [folderHierarchy, setFolderHierarchy] = useState({\r\n    isLoading: true,\r\n    root: {},\r\n  });\r\n\r\n  const fetchFolderHierarchy = async () => {\r\n    const { data } = await filesAPI.getFolderHierarchy();\r\n    setFolderHierarchy({\r\n      isLoading: false,\r\n      root: data,\r\n    });\r\n  };\r\n\r\n  const handleFolderClick = (clickedFolderId, e) => {\r\n    fetchFolderFiles(currentFolderDispatch, clickedFolderId);\r\n    pathArrayDispatch(pathActions.getNewPathArray(e.target.dataset));\r\n    resetSelecetedFiles(selectedFilesDispatch);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFolderHierarchy();\r\n  }, []);\r\n\r\n  const renderFolders = (folder, idArray, nameArray) => {\r\n    const resultIdArr = [...idArray];\r\n    const resultNameArr = [...nameArray];\r\n    resultIdArr.push([folder.id]);\r\n    resultNameArr.push([folder.name]);\r\n\r\n    return (\r\n      <ul key={folder.id} className=\"navbar-nav\">\r\n        <li key={folder.id} className=\"nav-item\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-dark\"\r\n            data-idpath={resultIdArr.join(\"/\")}\r\n            data-namepath={resultNameArr.join(\"/\")}\r\n            onClick={(e) => handleFolderClick(folder.id, e)}\r\n            disabled={currentFolder.isLoading}\r\n          >\r\n            {folder.name}\r\n          </button>\r\n          {folder.children &&\r\n            folder.children.map((child) =>\r\n              renderFolders(child, resultIdArr, resultNameArr)\r\n            )}\r\n        </li>\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  if (folderHierarchy.isLoading) {\r\n    return <LoadingLeftBar />;\r\n  } else {\r\n    return (\r\n      <nav className=\"left-bar__navigation navbar navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          {renderFolders(folderHierarchy.root, [], [])}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeftNavbar;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function CreateFileDialogBody(props) {\r\n  const {\r\n    isFolder,\r\n    newFolderState,\r\n    updateNewFolderState,\r\n    newFiles,\r\n    updateNewFiles,\r\n    newFilesRef,\r\n  } = props.value;\r\n\r\n  const handleFolderNameInput = (e) => {\r\n    const isFolderNameValid = checkFolderNameValidation(e.target.value);\r\n    updateNewFolderState({\r\n      isValid: isFolderNameValid,\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  const checkFolderNameValidation = (text) => {\r\n    const reg = /.*[\\/:*?\"<>|].*/;\r\n    return text.length > 0 && !reg.test(text);\r\n  };\r\n\r\n  const handleFilesUpload = (e) => {\r\n    const files = [];\r\n\r\n    for (let i = 0; i < e.target.files.length; i++) {\r\n      files.push({\r\n        id: uuidv4(),\r\n        name: e.target.files[i].name,\r\n        size: e.target.files[i].size,\r\n      });\r\n    }\r\n    updateNewFiles(files);\r\n  };\r\n\r\n  return isFolder ? (\r\n    <div className=\"modal-body\">\r\n      <form>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"new-folder-name\" className=\"form-label\">\r\n            The Name of New Folder You Want to Create\r\n          </label>\r\n          <div className=\"col-6\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"newFolderName\"\r\n              value={newFolderState.value}\r\n              onChange={(e) => handleFolderNameInput(e)}\r\n            />\r\n          </div>\r\n          {newFolderState.value.length > 0 && !newFolderState.isValid ? (\r\n            <p className=\"text-danger\">\r\n              A file name can't contain any of the following characters:\r\n              <br />\r\n              <span>\\ / : * ? \" &#060;&#062; |</span>\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  ) : (\r\n    <div className=\"modal-body\">\r\n      <form>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"new-folder-name\" className=\"form-label\">\r\n            Choose File(s) You Want to Add\r\n          </label>\r\n          {newFiles.length === 0 ? (\r\n            <div>No File Chosen</div>\r\n          ) : (\r\n            <div>\r\n              <ul>\r\n                {newFiles.map((file) => (\r\n                  <li key={file.id}>\r\n                    {file.name} ({file.size} bytes)\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          <input\r\n            multiple\r\n            type=\"file\"\r\n            className=\"form-control-file\"\r\n            onChange={handleFilesUpload}\r\n            ref={newFilesRef}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nCreateFileDialogBody.propTypes = {\r\n  isFolder: PropTypes.bool,\r\n  newFolderState: PropTypes.object,\r\n  updateNewFolderState: PropTypes.func,\r\n  newFiles: PropTypes.array,\r\n  updateNewFiles: PropTypes.func,\r\n  newFilesRef: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useFilesContext } from \"../contexts/filesInfoContext/\";\r\n\r\nimport filesAPI from \"../api/filesAPI\";\r\n\r\nexport default function CreateFileDialogFooter(props) {\r\n  const {\r\n    isFolder,\r\n    toggleIsFolder,\r\n    toggleShowDialog,\r\n    newFolderState,\r\n    newFiles,\r\n    newFilesRef,\r\n    resetNewFolderState,\r\n    resetFile,\r\n  } = props.value;\r\n  const { currentFolder } = useFilesContext();\r\n\r\n  const handleCreateFileClick = () => {\r\n    if (isFolder) {\r\n      createFile(currentFolder.id, [], [{ name: newFolderState.value }]);\r\n      resetNewFolderState();\r\n    } else {\r\n      const [newFilesLength, newFiles] = [newFilesRef.current.files.length, []];\r\n      for (let i = 0; i < newFilesLength; i++) {\r\n        newFiles.push({\r\n          name: newFilesRef.current.files[i].name,\r\n          size: newFilesRef.current.files[i].size,\r\n        });\r\n      }\r\n      createFile(currentFolder.id, newFiles, []);\r\n      resetFile();\r\n    }\r\n  };\r\n\r\n  const createFile = async (destFolderId, items, folders) => {\r\n    await filesAPI.createFileByData(destFolderId, items, folders);\r\n  };\r\n\r\n  const handleCloseClick = () => {\r\n    if (isFolder) {\r\n      resetNewFolderState();\r\n    } else {\r\n      resetFile();\r\n    }\r\n    toggleIsFolder();\r\n    toggleShowDialog();\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-footer\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-secondary\"\r\n        onClick={handleCloseClick}\r\n      >\r\n        Close\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary\"\r\n        onClick={handleCreateFileClick}\r\n        disabled={!newFolderState.isValid && newFiles.length === 0}\r\n      >\r\n        Create Files\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nCreateFileDialogFooter.propTypes = {\r\n  isFolder: PropTypes.bool,\r\n  toggleIsFolder: PropTypes.func,\r\n  toggleShowDialog: PropTypes.func,\r\n  newFolderState: PropTypes.object,\r\n  newFiles: PropTypes.array,\r\n  newFilesRef: PropTypes.object,\r\n  resetNewFolderState: PropTypes.func,\r\n  resetFile: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function CreateFileDialogTabs(props) {\r\n  const {\r\n    isFolder,\r\n    toggleIsFolder,\r\n    resetNewFolderState,\r\n    resetFile,\r\n  } = props.value;\r\n\r\n  const handleFolderTabClick = () => {\r\n    resetFile();\r\n    toggleIsFolder();\r\n  };\r\n\r\n  const handleFileTabClick = () => {\r\n    resetNewFolderState();\r\n    toggleIsFolder();\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-header nav-tabs\">\r\n      <ul className=\"nav nav-tab\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={isFolder ? \"nav-link active\" : \"nav-link\"}\r\n            aria-current=\"page\"\r\n            onClick={handleFolderTabClick}\r\n          >\r\n            Folder\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={!isFolder ? \"nav-link active\" : \"nav-link\"}\r\n            onClick={handleFileTabClick}\r\n          >\r\n            File\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nCreateFileDialogTabs.propTypes = {\r\n  isFolder: PropTypes.bool,\r\n  toggleIsFolder: PropTypes.func,\r\n  resetNewFolderState: PropTypes.func,\r\n  resetFile: PropTypes.func,\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CreateFileDialogBody from \"./CreateFileDialogBody\";\r\nimport CreateFileDialogFooter from \"./CreateFileDialogFooter\";\r\nimport CreateFileDialogTabs from \"./CreateFileDialogTabs\";\r\n\r\nfunction CreateFileDialog(props) {\r\n  const { toggleShowDialog } = props;\r\n\r\n  const [isFolder, setIsFolder] = useState(true);\r\n  const [newFolderState, setNewFolderState] = useState({\r\n    isValid: false,\r\n    value: \"\",\r\n  });\r\n  const [newFiles, setNewFiles] = useState([]);\r\n  const newFilesRef = useRef(null);\r\n\r\n  const updateNewFolderState = (newState) => {\r\n    setNewFolderState(newState);\r\n  };\r\n\r\n  const updateNewFiles = (newState) => {\r\n    setNewFiles(newState);\r\n  };\r\n\r\n  const resetNewFolderState = () => {\r\n    setNewFolderState({\r\n      isValid: false,\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  const resetFile = () => {\r\n    setNewFiles([]);\r\n    newFilesRef.current.value = \"\";\r\n  };\r\n\r\n  const toggleIsFolder = () => {\r\n    setIsFolder((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"show-modal modal\" tabIndex=\"-1\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content shadow\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Create File</h5>\r\n          </div>\r\n          <CreateFileDialogTabs\r\n            value={{\r\n              isFolder,\r\n              toggleIsFolder,\r\n              resetNewFolderState,\r\n              resetFile,\r\n            }}\r\n          />\r\n          <CreateFileDialogBody\r\n            value={{\r\n              isFolder,\r\n              newFolderState,\r\n              updateNewFolderState,\r\n              newFiles,\r\n              updateNewFiles,\r\n              newFilesRef,\r\n            }}\r\n          />\r\n          <CreateFileDialogFooter\r\n            value={{\r\n              isFolder,\r\n              toggleIsFolder,\r\n              toggleShowDialog,\r\n              newFolderState,\r\n              newFiles,\r\n              newFilesRef,\r\n              resetNewFolderState,\r\n              resetFile,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateFileDialog;\r\n\r\nCreateFileDialog.propTypes = {\r\n  toggleShowDialog: PropTypes.func,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CreateFileDialog from \"./CreateFileDialog\";\r\n\r\nexport default function CreateButton(props) {\r\n  const { btnDisabled } = props;\r\n\r\n  const [isShowed, setIsShowed] = useState(false);\r\n\r\n  const toggleShowDialog = () => {\r\n    setIsShowed((prev) => !prev);\r\n  };\r\n\r\n  const handleCreateClick = () => {\r\n    toggleShowDialog();\r\n  };\r\n\r\n  const DialogPortal = () =>\r\n    isShowed\r\n      ? ReactDOM.createPortal(\r\n          <CreateFileDialog toggleShowDialog={toggleShowDialog} />,\r\n          document.body\r\n        )\r\n      : null;\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"tool-bar__button btn btn-outline-primary btn-sm\"\r\n        disabled={!btnDisabled}\r\n        onClick={handleCreateClick}\r\n      >\r\n        Create\r\n      </button>\r\n\r\n      <DialogPortal />\r\n    </>\r\n  );\r\n}\r\n\r\nCreateButton.propTypes = {\r\n  btnDisabled: PropTypes.bool,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  useSelectedFilesContext,\r\n  useSelectedFilesDispatch,\r\n} from \"../contexts/selectedFilesContext\";\r\n\r\nimport { resetSelecetedFiles } from \"../utilities\";\r\n\r\nexport default function CopyButton(props) {\r\n  const { btnDisabled, updateCopiedFiles, isCopied } = props;\r\n\r\n  const { selectedFiles } = useSelectedFilesContext();\r\n\r\n  const { selectedFilesDispatch } = useSelectedFilesDispatch();\r\n\r\n  const handleCopyClick = () => {\r\n    const selectedFileIds = selectedFiles.map((file) => file.id);\r\n    updateCopiedFiles([...selectedFileIds]);\r\n    resetSelecetedFiles(selectedFilesDispatch);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={\r\n        isCopied\r\n          ? \"tool-bar__button btn btn-primary btn-sm\"\r\n          : \"tool-bar__button btn btn-outline-primary btn-sm\"\r\n      }\r\n      onClick={handleCopyClick}\r\n      disabled={btnDisabled}\r\n    >\r\n      Copy\r\n    </button>\r\n  );\r\n}\r\n\r\nCopyButton.propTypes = {\r\n  btnDisabled: PropTypes.bool,\r\n  updateCopiedFiles: PropTypes.func,\r\n  isCopied: PropTypes.bool,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFilesContext } from \"../contexts/filesInfoContext/\";\r\n\r\nimport { useSelectedFilesContext } from \"../contexts/selectedFilesContext\";\r\n\r\nimport filesAPI from \"../api/filesAPI\";\r\n\r\nexport default function PasteButton(props) {\r\n  const { copiedFiles, isCopied, resetCopiedFiles } = props;\r\n  const { currentFolder } = useFilesContext();\r\n  const handlePasteClick = () => {\r\n    pasteFiles(copiedFiles);\r\n    resetCopiedFiles();\r\n  };\r\n\r\n  const pasteFiles = async (files) => {\r\n    await filesAPI.pasteFilesById(currentFolder, files);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"tool-bar__button btn btn-outline-primary btn-sm\"\r\n      onClick={handlePasteClick}\r\n      disabled={!isCopied}\r\n    >\r\n      Paste\r\n    </button>\r\n  );\r\n}\r\n\r\nPasteButton.propTypes = {\r\n  copiedFiles: PropTypes.array,\r\n  isCopied: PropTypes.bool,\r\n  resetCopiedFiles: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useFilesDispatch } from \"../contexts/filesInfoContext/\";\r\nimport {\r\n  useSelectedFilesContext,\r\n  useSelectedFilesDispatch,\r\n} from \"../contexts/selectedFilesContext\";\r\nimport fileActions from \"../contexts/filesInfoContext/actions\";\r\n\r\nimport { resetSelecetedFiles } from \"../utilities\";\r\n\r\nimport filesAPI from \"../api/filesAPI\";\r\n\r\nexport default function DeleteButton(props) {\r\n  const { btnDisabled } = props;\r\n  const { selectedFiles } = useSelectedFilesContext();\r\n  const { selectedFilesDispatch } = useSelectedFilesDispatch();\r\n  const { currentFolderDispatch } = useFilesDispatch();\r\n\r\n  const deleteFile = async (id) => {\r\n    await filesAPI.deleteFileById(id);\r\n    currentFolderDispatch(fileActions.deleteFile(id));\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    if (selectedFiles.length === 1) {\r\n      deleteFile(selectedFiles[0].id);\r\n    } else {\r\n      console.log(\"can only delete single file\");\r\n    }\r\n    resetSelecetedFiles(selectedFilesDispatch);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"tool-bar__button btn btn-outline-primary btn-sm\"\r\n      onClick={handleDeleteClick}\r\n      disabled={btnDisabled}\r\n    >\r\n      Delete\r\n    </button>\r\n  );\r\n}\r\n\r\nDeleteButton.propTypes = {\r\n  btnDisabled: PropTypes.bool,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelectedFilesDispatch } from \"../contexts/selectedFilesContext\";\r\n\r\nimport { resetSelecetedFiles } from \"../utilities\";\r\n\r\nexport default function ResetSelectButton(props) {\r\n  const { btnDisabled } = props;\r\n\r\n  const { selectedFilesDispatch } = useSelectedFilesDispatch();\r\n\r\n  const handleResetClick = () => {\r\n    resetSelecetedFiles(selectedFilesDispatch);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"tool-bar__button btn btn-outline-primary btn-sm\"\r\n      onClick={handleResetClick}\r\n      disabled={btnDisabled}\r\n    >\r\n      Reset Select\r\n    </button>\r\n  );\r\n}\r\n\r\nResetSelectButton.propTypes = {\r\n  btnDisabled: PropTypes.bool,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CreateButton from \"./CreateButton\";\r\nimport CopyButton from \"./CopyButton\";\r\nimport PasteButton from \"./PasteButton\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport ResetSelectButton from \"./ResetSelectButton\";\r\n\r\nimport { useFilesContext } from \"../contexts/filesInfoContext/\";\r\nimport { useSelectedFilesContext } from \"../contexts/selectedFilesContext\";\r\n\r\nfunction Toolbar(props) {\r\n  const { isDetail, toggleDetailView } = props;\r\n  const { selectedFiles } = useSelectedFilesContext();\r\n  const { currentFolder } = useFilesContext();\r\n\r\n  const [btnDisabled, setBtnDisabled] = useState(true);\r\n  const [copiedFiles, setCopiedFiles] = useState([]);\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const resetCopiedFiles = () => {\r\n    setCopiedFiles([]);\r\n  };\r\n\r\n  const updateCopiedFiles = (newState) => {\r\n    setCopiedFiles(newState);\r\n  };\r\n\r\n  const handleDetailSwitch = () => {\r\n    toggleDetailView();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setBtnDisabled(currentFolder.isLoading || selectedFiles.length === 0);\r\n  }, [selectedFiles.length, currentFolder.isLoading]);\r\n\r\n  useEffect(() => {\r\n    setIsCopied(copiedFiles.length > 0);\r\n  }, [copiedFiles.length]);\r\n\r\n  return (\r\n    <div className=\"tool-bar row\">\r\n      <div className=\"col-12\">\r\n        <CreateButton btnDisabled={btnDisabled} />\r\n        <CopyButton\r\n          btnDisabled={btnDisabled}\r\n          updateCopiedFiles={updateCopiedFiles}\r\n          isCopied={isCopied}\r\n        />\r\n        <PasteButton\r\n          isCopied={isCopied}\r\n          copiedFiles={copiedFiles}\r\n          resetCopiedFiles={resetCopiedFiles}\r\n        />\r\n        <DeleteButton btnDisabled={btnDisabled} />\r\n        <ResetSelectButton btnDisabled={btnDisabled} />\r\n        <button\r\n          type=\"button\"\r\n          className={\r\n            isDetail\r\n              ? \"tool-bar__button btn-sm btn btn-primary float-right\"\r\n              : \"tool-bar__button btn-sm btn btn-outline-primary float-right\"\r\n          }\r\n          onClick={handleDetailSwitch}\r\n          disabled={currentFolder.isLoading}\r\n        >\r\n          detail\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toolbar;\r\nToolbar.propTypes = {\r\n  isDetail: PropTypes.bool,\r\n  toggleDetailView: PropTypes.func,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport FileList from \"./FileList\";\r\nimport LeftNavbar from \"./LeftNavbar\";\r\nimport Toolbar from \"./Toolbar\";\r\n\r\nimport { SelectedFileProvider } from \"../contexts/selectedFilesContext\";\r\n\r\nfunction FolderView() {\r\n  const [isDetail, setIsDetail] = useState(false);\r\n\r\n  const toggleDetailView = () => {\r\n    setIsDetail((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <SelectedFileProvider>\r\n      <div className=\"folder-view row\">\r\n        <div className=\"left-bar col-2\">\r\n          <LeftNavbar />\r\n        </div>\r\n        <div className=\"col-10\">\r\n          <Toolbar isDetail={isDetail} toggleDetailView={toggleDetailView} />\r\n          <FileList isDetail={isDetail} />\r\n        </div>\r\n      </div>\r\n    </SelectedFileProvider>\r\n  );\r\n}\r\n\r\nexport default FolderView;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  useFilesContext,\r\n  useFilesDispatch,\r\n} from \"../contexts/filesInfoContext/\";\r\nimport {\r\n  usePathArrayContext,\r\n  usePathArrayDispatch,\r\n} from \"../contexts/pathArrayContext\";\r\nimport pathActions from \"../contexts/pathArrayContext/actions\";\r\n\r\nimport { fetchFolderFiles } from \"../utilities\";\r\n\r\nfunction BreadCrumb() {\r\n  const { currentFolder } = useFilesContext();\r\n  const { currentFolderDispatch } = useFilesDispatch();\r\n  const { pathArray } = usePathArrayContext();\r\n  const { pathArrayDispatch } = usePathArrayDispatch();\r\n\r\n  const handlePathLinkClick = (index) => {\r\n    fetchFolderFiles(currentFolderDispatch, pathArray[index].id);\r\n    pathArrayDispatch(pathActions.slicePath(index));\r\n  };\r\n  const renderedPath = pathArray.map((pathPart, index) => {\r\n    return (\r\n      <li key={pathPart.id} className=\"breadcrumb-item\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-dark btn-sm\"\r\n          onClick={() => handlePathLinkClick(index)}\r\n          disabled={currentFolder.isLoading}\r\n        >\r\n          {pathPart.name}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"breadcrumb-screen row align-items-center justify-content-center border-bottom\">\r\n      <div className=\"breadcrumb-container col-8 border rounded shadow-sm\">\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb-screen__list breadcrumb\">{renderedPath}</ol>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BreadCrumb;\r\n","import React from \"react\";\r\n\r\nimport FolderView from \"./FolderView\";\r\nimport BreadCrumb from \"./BreadCrumb\";\r\nimport { FilesProvider } from \"../contexts/filesInfoContext/\";\r\n\r\nimport { PathArrayProvider } from \"../contexts/pathArrayContext\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <FilesProvider>\r\n      <PathArrayProvider>\r\n        <div className=\"home-page-container container-fluid border overflow-hidden\">\r\n          <BreadCrumb />\r\n          <FolderView />\r\n        </div>\r\n      </PathArrayProvider>\r\n    </FilesProvider>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import \"./css/style.css\";\r\nimport HomePage from \"./components/HomePage\";\r\n\r\nfunction App() {\r\n  return <HomePage />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}